

linux-0.11


    程序（代码，数据，堆栈）
    运行（CPU，内存，程序）

1.  
    程序运行需要代码，数据，堆栈，当寄存器状态被封装之后，程序不会察觉到差别。
    理解过程调用

2.  
    中断处理程序
        硬件中断处理程序
            时钟中断
        系统调用处理程序
            进程控制
            //内存分配
            文件系统

    中断作为内核入口，系统调用作为系统功能入口

3.  
    内核态栈

    task_struct

        LDT
        TSS

4.内存
    三级地址映射
        虚拟地址  -分段->  线性地址  -分页->  物理地址
    虚存使用文件接口
    需求加载 写时复制

    内存初始化 
    内存异常中断处理程序

/*
    进程 * 资源    --  内核态栈 * 资源程序
                  |-  （另一种可能？）资源对象独立    面向进程？  进程无关？
    （宏内核的优美结构）
*/



5.文件系统
    上层：文件系统接口
    下层：设备驱动程序
    主体：一组算法，如何把字节数组组织成文件目录结构

6.设备
    上层：设备接口
    下层：硬件控制，中断处理
    主体：需求处理，调度逻辑


/*
    希望把多样的 文件系统 和 设备驱动 独立出去
    接口 与 依赖
*/




/*
内核数据结构

    中断调用表  系统调用表
    
    task_struct  LDT  TSS
    内核态栈（内核程序运行的基础）

    GDT
    页目录表  页表

*/